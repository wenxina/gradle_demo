<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hl.mybatis.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="com.example.hl.mybatis.entity.Users">
    <constructor>
      <idArg column="userId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="userName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="gender" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="card" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="tel" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    userId, userName, gender, card, phone, tel, address
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.hl.mybatis.entity.Users">
    insert into users (userId, userName, gender, 
      card, phone, tel, address
      )
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{gender,jdbcType=BIT}, 
      #{card,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.hl.mybatis.entity.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userId,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="card != null">
        card,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=BIT},
      </if>
      <if test="card != null">
        #{card,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.hl.mybatis.entity.Users">
    update users
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=BIT},
      </if>
      <if test="card != null">
        card = #{card,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.hl.mybatis.entity.Users">
    update users
    set userName = #{username,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      card = #{card,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>